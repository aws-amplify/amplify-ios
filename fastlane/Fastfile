require_relative './amplify_pods.rb'

opt_out_usage
default_platform(:ios)

PLIST_KEY = "CFBundleShortVersionString"

platform :ios do
  desc "Create a pre-release version by pushing a tag to GitHub, and pushing pods to CocoaPods"
  lane :unstable do 
    next_version = calculate_next_canary_version

    UI.message("Releasing unstable version: #{next_version}")

    # Increment all specs and plists
    increment_versions(version: next_version)

    # Create tag and push to origin
    add_tag(version: next_version)

    # Push to CocoaPods
    release_pods()
  end

  desc "Create a release version by building and committing a changelog, pushing a tag to GitHub, and pushing pods to CocoaPods"  
  lane :release do
    next_version, commits = calculate_next_release_version

    UI.message("Releasing version: #{next_version}")

    # Increment all specs and plists
    increment_versions(version: next_version)

    p commits

    changelog = build_changelog(version: next_version, commits: commits)

    write_changelog(changelog: changelog, path: 'CHANGELOG.md')

    # # Commit and push 
    # release_commit(version: next_version)

    # # Create tag and push to origin
    # add_tag(version: next_version)

    # # Push pods
    # release_pods()
  end

  desc "Increment versions"
  private_lane :increment_versions do |options|
    version = options[:version].to_s

    AmplifyPods.pods.each do |pod|
      spec, constants, plist_paths = pod.values

      UI.message("Incrementing version for #{spec}")

      constants.each do |constant|
        set_key_value(file: spec, key: constant, value: version)
      end

      plist_paths.each do |plist_path|
        set_info_plist_value(path: plist_path, key: PLIST_KEY, value: version)
      end
    end
  end
  
  desc "Commit and push"
  private_lane :release_commit do |options|
    next_version = options[:version]

    sh('git', 'config', '--global', 'user.email', $GITHUB_EMAIL)
    sh('git', 'config', '--global', 'user.name', $GITHUB_USER)

    commit_message = "chore: release #{next_version} [skip ci]"
    sh('git', 'commit', '-am', commit_message)
    sh('git', 'push', 'origin')

  end

  desc "Tag in git and push to GitHub"
  private_lane :add_tag do |options|
    next_version = options[:version]
    next_tag = "v#{next_version}"

    add_git_tag(tag: next_tag)
    push_git_tags(tag: next_tag)
  end


  desc "Release pods"
  private_lane :release_pods do
    AmplifyPods.pods.each do |pod|
      pod_path = "/Users/distiller/amplify-ios/#{pod[:spec]}"

      UI.message("Pushing pod #{pod[:spec]}")

      sh('pod', 'trunk', 'push', pod_path, '--allow-warnings', '--synchronous')

      # TODO: utilize action once the PR for adding `synchronous` options has been merged
      # https://github.com/fastlane/fastlane/pull/16698
      # pod_push(path: pod[:spec], allow_warnings: true, synchronous: true)

      # This shouldn't be necessary... but it is
      sh('pod', 'repo', 'update')
    end
  end
end
