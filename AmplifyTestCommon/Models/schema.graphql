enum PostStatus {
    PRIVATE
    DRAFT
    PUBLISHED
}

type Post @model {
    id: ID!
    title: String!
    content: String!
    createdAt: AWSDateTime!
    updatedAt: AWSDateTime
    draft: Boolean
    rating: Float
    status: PostStatus
    comments: [Comment] @connection(name: "PostComment")
}

type Comment @model {
    id: ID!
    content: String!
    createdAt: AWSDateTime!
    post: Post! @connection(name: "PostComment")
}

type Article
    @model
    @auth(rules: [
        { allow: owner, ownerField: "owner", operations: [create, read] },
        { allow: groups, groups: ["Admin"] }
    ]) {
    id: ID!
    content: String!
    createdAt: AWSDateTime!
    owner: String
    authorsNotes: String @auth( rules: [
        { allow: owner, ownerField: "owner", operations: [update] }
    ])
}


type User @model {
    id: ID!
    name: String!
    following: [UserFollowing] @connection (name: "following")
    followers: [UserFollowers] @connection (name: "followers")
}

type UserFollowing @model {
  id: ID!
  user: User @connection(name: "following")
  followingUser: User @connection
}

type UserFollowers @model {
  id: ID!
  user: User @connection(name: "followers")
  followersUser: User @connection
}
